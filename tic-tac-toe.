import React, { useState } from "react";
import { Button } from "@/components/ui/button";

const winningCombinations = [
  [0, 1, 2],
  [3, 4, 5],
  [6, 7, 8],
  [0, 3, 6],
  [1, 4, 7],
  [2, 5, 8],
  [0, 4, 8],
  [2, 4, 6],
];

const TicTacToe = () => {
  const [board, setBoard] = useState(Array(9).fill(null));
  const [isXTurn, setIsXTurn] = useState(true);
  const [vsComputer, setVsComputer] = useState(false);
  const [winner, setWinner] = useState(null);

  const handleClick = (index) => {
    if (board[index] || winner) return;

    const newBoard = [...board];
    newBoard[index] = isXTurn ? "X" : "O";
    setBoard(newBoard);
    checkWinner(newBoard);
    setIsXTurn(!isXTurn);

    if (vsComputer && !isXTurn) {
      setTimeout(() => computerMove(newBoard), 500);
    }
  };

  const checkWinner = (board) => {
    for (let combo of winningCombinations) {
      const [a, b, c] = combo;
      if (board[a] && board[a] === board[b] && board[b] === board[c]) {
        setWinner(board[a]);
        return;
      }
    }
    if (!board.includes(null)) {
      setWinner("Draw");
    }
  };

  const computerMove = (currentBoard) => {
    const emptyIndices = currentBoard
      .map((val, idx) => (val === null ? idx : null))
      .filter((val) => val !== null);

    if (emptyIndices.length === 0) return;

    const randomIndex =
      emptyIndices[Math.floor(Math.random() * emptyIndices.length)];

    const newBoard = [...currentBoard];
    newBoard[randomIndex] = "O";
    setBoard(newBoard);
    checkWinner(newBoard);
    setIsXTurn(true);
  };

  const resetGame = () => {
    setBoard(Array(9).fill(null));
    setIsXTurn(true);
    setWinner(null);
  };

  return (
    <div className="flex flex-col items-center justify-center min-h-screen gap-4 p-4">
      <h1 className="text-3xl font-bold">Tic Tac Toe</h1>
      <div className="grid grid-cols-3 gap-2">
        {board.map((value, index) => (
          <button
            key={index}
            className="w-20 h-20 text-2xl font-bold border-2 rounded-xl hover:bg-gray-100"
            onClick={() => handleClick(index)}
          >
            {value}
          </button>
        ))}
      </div>
      {winner && <p className="text-xl">Winner: {winner}</p>}
      <div className="flex gap-2">
        <Button onClick={resetGame}>Reset</Button>
        <Button
          variant="outline"
          onClick={() => setVsComputer(!vsComputer)}
        >
          {vsComputer ? "Play with Friend" : "Play with Computer"}
        </Button>
      </div>
    </div>
  );
};

export default TicTacToe;
